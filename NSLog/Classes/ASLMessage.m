/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

#import "ASLMessage.h"

@implementation ASLMessage

@synthesize pid         = _pid;
@synthesize uid         = _uid;
@synthesize gid         = _gid;
@synthesize level       = _level;
@synthesize time        = _time;
@synthesize host        = _host;
@synthesize sender      = _sender;
@synthesize facility    = _facility;
@synthesize message     = _message;

- ( id )initWithASLMessage: ( aslmsg )message
{
    const char * pid;
    const char * uid;
    const char * gid;
    const char * level;
    const char * time;
    const char * host;
    const char * sender;
    const char * facility;
    const char * msg;
    
    if( message == NULL )
    {
        return nil;
    }
    
    if( ( self = [ self init ] ) )
    {
        pid      = asl_get( message, ASL_KEY_PID );
        uid      = asl_get( message, ASL_KEY_UID );
        gid      = asl_get( message, ASL_KEY_GID );
        level    = asl_get( message, ASL_KEY_LEVEL );
        time     = asl_get( message, ASL_KEY_TIME );
        host     = asl_get( message, ASL_KEY_HOST );
        sender   = asl_get( message, ASL_KEY_SENDER );
        facility = asl_get( message, ASL_KEY_FACILITY );
        msg      = asl_get( message, ASL_KEY_MSG );
        
        _pid      = ( pid   != NULL ) ? ( NSInteger )atoi( pid )         : 0;
        _uid      = ( uid   != NULL ) ? ( NSInteger )atoi( uid )         : 0;
        _gid      = ( gid   != NULL ) ? ( NSInteger )atoi( gid )         : 0;
        _level    = ( level != NULL ) ? ( unsigned int )atoi( level ) : 0;
        
        _host     = ( host     != NULL ) ? [ NSString stringWithCString: host     encoding: NSUTF8StringEncoding ] : nil;
        _sender   = ( sender   != NULL ) ? [ NSString stringWithCString: sender   encoding: NSUTF8StringEncoding ] : nil;
        _facility = ( facility != NULL ) ? [ NSString stringWithCString: facility encoding: NSUTF8StringEncoding ] : nil;
        _message  = ( msg      != NULL ) ? [ NSString stringWithCString: msg      encoding: NSUTF8StringEncoding ] : nil;
        
        _time     = [ NSDate dateWithTimeIntervalSince1970: atoi( time ) ];
        
        [ _host     retain ];
        [ _sender   retain ];
        [ _facility retain ];
        [ _message  retain ];
        [ _time     retain ];
        
        if( [ _message length ] == 0 )
        {
            [ self release ];
            
            return nil;
        }
    }
    
    return self;
}

- ( void )dealloc
{
    [ _host     release ];
    [ _sender   release ];
    [ _facility release ];
    [ _message  release ];
    [ _time     release ];
    
    [ super dealloc ];
}

- ( NSString * )description
{
    return [ [ super description ] stringByAppendingFormat: @"%@ - %@: %@", _time, _sender, _message ];
}

@end
