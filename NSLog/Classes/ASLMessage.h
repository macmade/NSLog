/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

#import <asl.h>

typedef enum
{
    ASLMessageLevelEmergency    = ASL_LEVEL_EMERG,
    ASLMessageLevelAlert        = ASL_LEVEL_ALERT,
    ASLMessageLevelCritical     = ASL_LEVEL_CRIT,
    ASLMessageLevelError        = ASL_LEVEL_ERR,
    ASLMessageLevelWarning      = ASL_LEVEL_WARNING,
    ASLMessageLevelNotice       = ASL_LEVEL_NOTICE,
    ASLMessageLevelInfo         = ASL_LEVEL_INFO,
    ASLMessageLevelDebug        = ASL_LEVEL_DEBUG
}
ASLMessageLevel;

@interface ASLMessage: NSObject
{
@protected
    
    NSInteger       _pid;
    NSInteger       _uid;
    NSInteger       _gid;
    ASLMessageLevel _level;
    NSDate        * _time;
    NSString      * _host;
    NSString      * _sender;
    NSString      * _facility;
    NSString      * _message;
    
@private
    
    id _ASLMessage_Reserved[ 5 ] __attribute__( ( unused ) );
}

@property( atomic, readonly ) NSInteger       pid;
@property( atomic, readonly ) NSInteger       uid;
@property( atomic, readonly ) NSInteger       gid;
@property( atomic, readonly ) ASLMessageLevel level;
@property( atomic, readonly ) NSDate        * time;
@property( atomic, readonly ) NSString      * host;
@property( atomic, readonly ) NSString      * sender;
@property( atomic, readonly ) NSString      * facility;
@property( atomic, readonly ) NSString      * message;

- ( id )initWithASLMessage: ( aslmsg )message;

@end
